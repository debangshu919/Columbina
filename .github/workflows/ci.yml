name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
    inputs:
      tag_version:
        description: 'Optional version to tag Docker image'
        required: false
        default: ''

jobs:
  build:
    name: Build and Push Docker Image to AWS ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install toml
        run: pip install toml

      - name: Get version
        id: get_version
        run: |
          python - <<EOF
          import toml, os, sys
          version = os.environ.get("INPUT_TAG_VERSION")
          if not version:
              data = toml.load("pyproject.toml")
              version = data["project"]["version"]
          print(f"::set-output name=version::{version}")
          EOF
        env:
          INPUT_TAG_VERSION: ${{ github.event.inputs.tag_version }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: columbina
          IMAGE_TAG: ${{ steps.get_version.outputs.version }}
        run: |
          echo "Building Docker image $REGISTRY/$REPOSITORY:$IMAGE_TAG"
          docker build --pull -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
