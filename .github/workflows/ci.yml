name: CI Pipeline

on:
  workflow_run:
    workflows: ["Version Bump"]
    types:
      - completed
  workflow_dispatch:
    inputs:
      tag_version:
        description: 'Optional version to tag Docker image'
        required: false
        default: ''

jobs:
  build:
    name: Build and Push Docker Image to Docker Hub
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install toml
        run: pip install toml

      - name: Get version
        id: get_version
        run: |
          python - <<EOF
          import toml, os
          version = os.environ.get("INPUT_TAG_VERSION")
          if not version:
              data = toml.load("pyproject.toml")
              version = data["project"]["version"]
          with open(os.environ.get('GITHUB_OUTPUT', '/dev/null'), 'a') as f:
              f.write(f"version={version}\\n")
          EOF
        env:
          INPUT_TAG_VERSION: ${{ github.event.inputs.tag_version }}

      - name: Create .env files from GitHub Secrets
        run: |
          echo "${{ secrets.ENV_PRODUCTION }}" > .env.production
          echo "${{ secrets.ENV_DEVELOPMENT }}" > .env.development

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build, tag, and push Docker image to Docker Hub
        env:
          REPOSITORY: ${{ secrets.DOCKERHUB_USERNAME }}/columbina
          IMAGE_TAG: ${{ steps.get_version.outputs.version }}
        run: |
          echo "Building Docker image $REPOSITORY:$IMAGE_TAG"
          docker build --pull -t $REPOSITORY:$IMAGE_TAG .
          docker push $REPOSITORY:$IMAGE_TAG