name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install toml
        run: pip install toml

      - name: Set Docker image info
        id: image_info
        run: |
          IMAGE_TAG=$(python -c "import toml; print(toml.load('pyproject.toml')['project']['version'])")
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "REPOSITORY=columbina" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ap-south-1
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        
      - name: Test
        run: echo ${{ steps.login-ecr.outputs.registry }}/$REPOSITORY:$IMAGE_TAG

      - name: Pull Docker image
        run: docker pull ${{ steps.login-ecr.outputs.registry }}/$REPOSITORY:$IMAGE_TAG

      - name: Stop existing container
        run: |
          if [ $(docker ps -q -f name=$REPOSITORY) ]; then
            docker stop $REPOSITORY
            docker rm $REPOSITORY
          fi

      - name: Run new container
        run: |
          docker run -d --name $REPOSITORY \
            --restart always \
            -p 8000:8000 \
            -e COLUMBINA_ENV=production\
            ${{ steps.login-ecr.outputs.registry }}/$REPOSITORY:$IMAGE_TAG